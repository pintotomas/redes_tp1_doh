openapi: 3.0.0
info:
  version: "1.0.0"
  title: API de Alumnos
  description: Documentación de la API de Alumnos de la materia 75.43 Introducción a Sistemas Distribuidos

servers:
  - url: http://localhost:8080/api
    description: Servidor de desarrollo

# Paths servidos por la aplicación
paths:
#  /api/domains/{domain}:
#    operationId: "api.domains.obtain_ip"
#    tags:
#      - "Domains"
#    summary: "IPs dominions"
#    description: "Obtiene la IP asociada a un dominio en particular, pudiendo ser este un custom domain creado previamente."
#    responses:
#     200:
#        description: "Se obtuvo la IP exitosamente"
#        content: 
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Domain'
  /domains/{domain_name}:
    get:
      operationId: "api.domains.obtain_ip"
      tags:
        - "Domains"
      summary: "IPs dominios"
      description: "Obtiene la IP asociada a un dominio en particular, pudiendo ser este un custom domain creado previamente."
      parameters:
        - in: path
          name: domain_name
          required: true
          schema:
            type: string
          description: El domain name del cual queremos obtener su ip
      responses:
        200:
          description: "Dominio encontrado exitosamente"
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
        404:
          description: "No existe el dominio en el sistema ni se pudo resolver mediante DNS"

  /custom-domains:
    post:
      operationId: "api.domains.add_custom_domain"
      tags:
        - 'Custom domains'
      summary: "Agrega un nuevo dominio custom"
      description: "Carga un nuevo dominio custom en el sistema con su correspondiente IP"
      requestBody:
        required: true
        x-body-name: 'custom-domain'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCustomDomain'
      responses:
        201:
          description: "Operacion de carga exitosa"
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
        400: 
          description: "Ya se ha cargado el dominio en el sistema"
    put:
      operationId: "api.domains.edit_domain"
      tags: 
        - 'Edit domain'
      summary: 'Modifica ips'
      description: 'Modifica la ip de un dominio dado'
      requestBody:
        required: true
        x-body-name: 'edit-domain'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCustomDomain'
      responses:
        200:
          description: "Modificacion exitosa"
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
        404:
          description: "No existe el dominio en el sistema, no se puede modificar"
        400:
          description: "No se indicaron los "

  /alumnos:
    get:
      operationId: "api.alumnos.obtener_todos"
      tags:
        - "Alumnos"
      summary: "Colección de alumnos de la materia"
      description: "Obtiene la lista de todos los alumnos de la materia existentes en el sistema"
      responses:
        200:
          description: "Operación de lectura exitosa"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alumno'

    post:
      operationId: "api.alumnos.crear"
      tags:
        - "Alumnos"
      summary: "Alta de un alumno de la materia"
      description: "Crea un nuevo alumno y lo agrega a la lista de alumnos de la materia"
      requestBody:
        required: true
        x-body-name: 'alumno'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputAlumno'
      responses:
        201:
          description: "Se creo el alumno correctamente"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alumno'
        400:
          description: "DNI o padron duplicado"
  /alumnos/{id_alumno}:
    get:
      operationId: "api.alumnos.obtener_uno"
      tags:
        - "Alumnos"
      summary: "Alumno de la materia"
      description: "Obtiene un alumno particular de la materia"
      parameters:
        - in: path
          name: id_alumno
          required: true
          schema:
            type: integer
          description: El id del usuario a obtener
      responses:
        200:
          description: "Operación de lectura exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alumno'
        404:
          description: "Alumno no encontrado"
    delete:
      operationId: "api.alumnos.borrar"
      tags:
        - "Alumnos"
      summary: "Borrar alumno de la materia"
      description: "Borra un alumno de la materia"
      parameters:
        - in: path
          name: id_alumno
          required: true
          schema:
            type: integer
          description: El id del usuario a borrar
      responses:
        204:
          description: "Operación de lectura exitosa"
        404:
          description: "Alumno no encontrado"
# Declaración de tipos de datos
components:
  schemas:
    Alumno:
      type: "object"
      properties:
        id:
          type: "number"
        nombre:
          type: "string"
        dni:
          type: "string"
        padron:
          type: "string"
    InputAlumno:
      type: "object"
      properties:
        nombre:
          type: "string"
        dni:
          type: "string"
        padron:
          type: "string"
    Error:
      type: "object"
      properties:
        codigo:
          type: "number"
        mensaje:
          type: "string"
    Domain:
      type: "object"
      properties:
        domain:
          type: "string"
        ip:
          type: "string"
        custom:
          type: "boolean"
    InputCustomDomain:
      type: "object"
      properties:
        domain:
          type: "string"
        ip:
          type: "string"
